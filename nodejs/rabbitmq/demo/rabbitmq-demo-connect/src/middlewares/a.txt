{ domain: null,
_events: {},
		 _maxListeners: 0,
		 channel: 1,
		 connection: 
		 { domain: null,
_events: 
			 { connect: [Function],
data: [Function],
	  error: [Object],
	  ready: [Object],
	  end: [Function],
	  close: [Function] },
			 _maxListeners: 10,
			 options: 
			 { host: '10.203.11.234',
port: 5672,
	  login: 'hitrader',
	  password: 'hitrader123',
	  authMechanism: 'AMQPLAIN',
	  vhost: '/',
	  connectionTimeout: 10000,
	  ssl: [Object],
	  heartbeat: 60,
	  clientProperties: [Object] },
			 implOptions: 
			 { defaultExchangeName: '',
reconnect: true,
		   reconnectBackoffStrategy: 'linear',
		   reconnectExponentialLimit: 120000,
		   reconnectBackoffTime: 1000 },
			 connectionAttemptScheduled: false,
			 _defaultExchange: null,
			 channelCounter: 1,
			 _sendBuffer: <Buffer 01 00 01 00 00 00 05 00 14 00 0a 00 ce 00 01 ce 00 00 3c ce 49 8b 55 a8 52 52 52 52 52 52 52 52 57 48 8d 55 30 52 45 33 d2 4f 8d 14 a2 41 52 e8 00 00 00 ...>,
			 _blocked: false,
			 _blockedReason: null,
			 socket: 
			 { _connecting: false,
_handle: [Object],
		 _readableState: [Object],
		 readable: true,
		 domain: null,
		 _events: [Object],
		 _maxListeners: 10,
		 _writableState: [Object],
		 writable: true,
		 allowHalfOpen: false,
		 onend: null,
		 destroyed: false,
		 bytesRead: 525,
		 _bytesDispatched: 203,
		 _pendingData: null,
		 _pendingEncoding: '',
		 _idleTimeout: -1,
		 _idleNext: null,
		 _idlePrev: null,
		 _idleStart: 1522322012015,
		 pipe: [Function],
		 addListener: [Function],
		 on: [Function],
		 pause: [Function],
		 resume: [Function],
		 read: [Function],
		 _consuming: true },
			 destroy: [Function],
			 write: [Function],
			 pause: [Function],
			 resume: [Function],
			 setEncoding: [Function],
			 ref: [Function],
			 unref: [Function],
			 address: [Function],
			 channels: { '0': [Circular], '1': [Circular] },
			 queues: {},
			 exchanges: { zhengshiceshi: [Circular] },
			 parser: 
			 { isClient: true,
state: 'frameHeader',
	   maxFrameBuffer: 131072,
	   parse: [Function: header],
	   onMethod: [Function],
	   onContent: [Function],
	   onContentHeader: [Function],
	   onHeartBeat: [Function],
	   onError: [Function] },
			 readyEmitted: true,
			 serverProperties: 
			 { capabilities: [Object],
cluster_name: 'rabbit@bdn',
			  copyright: 'Copyright (C) 2007-2017 Pivotal Software, Inc.',
			  information: 'Licensed under the MPL.  See http://www.rabbitmq.com/',
			  platform: 'Erlang/OTP 20.1.2',
			  product: 'RabbitMQ',
			  version: '3.6.12' },
			 _outboundHeartbeatTimer: 
			 { _idleTimeout: 60000,
_idlePrev: [Object],
		   _idleNext: [Object],
		   _idleStart: 1522322012028,
		   _onTimeout: [Function],
		   _repeat: false },
			 _inboundHeartbeatTimer: 
			 { _idleTimeout: 120000,
_idlePrev: [Object],
		   _idleNext: [Object],
		   _idleStart: 1522322012026,
		   _onTimeout: [Function],
		   _repeat: false } },
		 _tasks: [],
		 name: 'zhengshiceshi',
		 binds: 0,
		 exchangeBinds: 0,
		 sourceExchanges: {},
		 options: { type: 'direct', durable: true, autoDelete: false },
		 _openCallback: undefined,
		 _sequence: null,
		 _unAcked: {},
		 _addedExchangeErrorHandler: false }
